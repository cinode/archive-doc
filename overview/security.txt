The security
############

Cinode was built with security in mind. The lack of server side forces us
to use alternative methods for user authorization. The approach that has
been used is based on cryptography.

Every blob in the Cinode network is stored and transferred to other nodes in an
encrypted form. The ability to decrypt this data (knowing the decryption key) equals
a read access.

In addition, each blob reveals extra cryptographic properties similar to
digital signatures. These properties are used
to validate blob and make sure that it's content was created, modified
or simply accepted by an authorized user. Simply put, it's equal to write access
authorization. The creator/modifier/acceptor of the blob must be in a
possession of all information needed to make the blob valid
such as a private key used to sign blob's content.

The blob validation process does not require read access rights
(the data encryption key). By doing so, nodes can safely exchange
blobs between them without revealing the actual blob content. This allows
secure backups, load balancing and blob proxies hosted by 3rd parties.

