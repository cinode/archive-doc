Limitations
###########

The Cinode network is quite unusual approach
to handle cloud services. Some of it's properties
make it unsuitable for certain types of applications.
There are known limitations of the current Cinode architecture.
Some of them can be and will be fixed in future versions,
others are tightly bound to the uncommon networking model and thus
can not be dealt with without changing root Cinode's design decisions.

Latency and lack of realtime connectivity
-----------------------------------------

The network is based on data blobs floating around
between nodes and DHT network used to look for them.
This solution, similar to the one used in trackerless
torrent networks, introduces significant lag between
the time a search is initiated and the time of final
blob's arrival. It greatly reduces the ability to exchange
information between nodes where the delivery time
is critical, especially while dealing with a lot of small
data packets. To show an example, a low latency is needed in
realtime collaboration software that use video and voice chats.

This limitation can be relaxed in the future
by introducing direct connectivity between
nodes. Cinode may either be used to establish needed
realtime data channels or be just a negotiating medium
allowing nodes to establish secure direct connection
outside Cinode structure.

The always-remember nature of the network
-----------------------------------------------

There's no central management unit in Cinode that could
force some blobs to be permanently removed. Any blob
that was sent to the network may stay there for unspecified
amount of time. This introduces potential security threat
due to the fact that some ciphers may be cracked over time.

Future versions of the protocol may include the ability 
to instruct other nodes to remove a particular blob.
But even if this method is implemented, the actual fact
of removing data can never be guaranteed in 100%.

Sniffing nodes
--------------

One form of malicious software existing in the network
will be a sniffing node. A base node's functionality may be
extended to store as much information from the network
as possible, gathering information for statistical analysis
and for possible future cracking attempts.

Although current version does implement read access
authorization, it's security relies on the unbreakability
of encryption algorithms applied there.

Due to the issue just presented, we highly encourage not to
put any confidential, personal or sensitive information
into the network during the current phase of it's existence.
It's highly probable that some security issues are still present
int the sofrware. Instead, we propose to put publicly available
information to the network first to gain reasonable amount 
of information used for testing purposes.

Future Cinode versions will implement ability to
restrict read access even more so that it's impossible
to even download the encrypted content without proving
that read access rights have been granted. 


Encryption overhead
-------------------

Cinode design strongly relies on high quality encryption
standards. The tradeoff between encryption efficiency
and the security is an always-win for the security.
The "always-remember" nature of the network requires
us to use the highest know security model since
the data we store today may be used in future decryption
attacks. The increased key sizes and stronger algorithms
may result in increased need for computational power. 

